"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
)
mi_df
# Podemos usar dim() en un data frame
dim(mi_df)
# El largo de un data frame es igual a su número de columnas
length(mi_df)
# names() nos permite ver los nombres de las columnas
names(mi_df)
# La clase de un data frame es data.frame
class(data.frame)
data.frame(
"entero" = 1:3,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
)
matriz <- matrix(1:12, ncol = 4)
df <- as.data.frame(matriz)
class(df)
# Resultado
df
mi_df <- data.frame(
"entero" = 1:4,
"factor" = c("a", "b", "c", "d"),
"numero" = c(1.2, 3.4, 4.5, 5.6),
"cadena" = as.character(c("a", "b", "c", "d"))
)
# mi_df * 2
mi_vector <- 1:10
mi_matriz <- matrix(1:4, nrow = 2)
mi_df     <- data.frame("num" = 1:3, "let" = c("a", "b", "c"))
mi_lista <- list("un_vector" = mi_vector, "una_matriz" = mi_matriz, "un_df" = mi_df)
mi_lista
lista_recursiva <- list("lista1" = mi_lista, "lista2" = mi_lista)
# Resultado
lista_recursiva
length(lista_recursiva)
dim(lista_recursiva)
class(lista_recursiva)
mi_lista / 2
mi_vector <- c("a", "b", "c")
mi_matriz <- matrix(1:4, nrow = 2)
mi_df <- data.frame("a" = 1:2, "b" = c("a", "b"))
mi_lista <- list("a" = mi_vector, "b" = mi_matriz, "c" = mi_df)
as.vector(mi_matriz)
as.vector(mi_df)
as.vector(mi_lista)
as.matrix(mi_vector)
as.matrix(mi_df)
as.matrix(mi_lista)
as.data.frame(mi_vector)
as.data.frame(mi_matriz)
as.data.frame(mi_lista)
as.list(mi_vector)
as.list(mi_matriz)
as.list(mi_df)
bcancer <- read.table(file = "breast-cancer-wis.data")
bcancer <- read.table(file = "datos/breast-cancer-wis.data")
head(bcancer)
bcancer <- read.table(file = "breast-cancer-wis.data", header = FALSE, sep = ",")
bcancer <- read.table(file = "datos/breast-cancer-wis.data")
head(bcancer)
bcancer <- read.table(file = "datos/breast-cancer-wis.data", header = FALSE, sep = ",")
# Resultado
head(bcancer)
nombres <- c("id", "clump_t", "u_csize", "u_cshape", "m_adh", "spcs", "b_nuc",
"b_chr", "n_nuc", "mit", "class")
bcancer <- read.table(file = "datos/breast-cancer-wis.data", header = FALSE, sep = ",",
col.names = nombres)
# Resultado
head(bcancer)
class(bcancer)
bcancer <- read.table(file = "datos/breast-cancer-wis.csv", header = TRUE, sep = ",",
col.names = nombres)
# Resultado
head(bcancer)
bcancer <- read.csv("datos/breast-cancer-wis.csv")
# Resultado
head(bcancer)
readLines("datos/breast-cancer-wis.data", n = 4)
write.table(x = iris, file = "iris.txt", sep = ",",
row.names = FALSE, col.names = TRUE)
iris_txt <- read.table(file = "iris.txt", header = TRUE, sep = ",")
# Resultado
head(iris_txt)
write.csv(x = iris, file = "iris.csv", row.names = FALSE)
iris_csv <- read.csv("iris.csv")
# Resultado
head(iris_csv)
mi_lista <- list("a" = c(TRUE, FALSE, TRUE),
"b" = c("a", "b", "c"),
"c" = matrix(1:4, ncol = 2),
"d" = matrix(1:6, ncol = 3))
# Resultado
mi_lista
write.table(x = mi_lista, file = "mi_lista.txt")
saveRDS(object = mi_lista, file = "mi_lista.rds")
mi_lista_importado <- readRDS(file = "mi_lista.rds")
mi_lista_importado
# El resultado es una lista, al igual que el objeto original
class(mi_lista)
library(readxl)
readLines("data_frames.xlsx", n = 5)
excel_sheets("data_frames.xlsx")
iris_excel <- read_excel(path = "data_frames.xlsx", sheet = "iris")
iris_excel
trees_excel <- read_excel(path = "data_frames.xlsx", sheet = "trees")
# Resultado
trees_excel
trees_excel <- read_excel(path = "data_frames.xlsx", sheet = "trees",
range = "B3:D33",
col_names = c("Girth", "Height", "Volume"))
# Resultado
trees_excel
library(haven)
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
plot(x = banco$age, y = banco$balance, col= banco$loan)
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
plot(x = banco$age, y = banco$balance, col= banco$loan)
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
#plot(x = banco$age, y = banco$balance, col= banco$loan)
#legend(x = "topleft", legend = c("No", "Yes"), fill = c("Black", "Red"), title = "Loan")
plot(x = iris$Petal.Length, y = iris$Petal.Width, col = iris$Species,
main = "Iris - Pétalo", xlab = "Largo", ylab = "Ancho")
legend(x = "topleft", legend = c("Setosa", "Versicolor", "Virginica"),
fill = c("black", "red", "green"), title = "Especie")
plot(x = banco$education, y = banco$age)
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
#plot(x = banco$age, y = banco$balance, col= banco$loan)
#legend(x = "topleft", legend = c("No", "Yes"), fill = c("Black", "Red"), title = "Loan")
plot(x = iris$Petal.Length, y = iris$Petal.Width, col = iris$Species,
main = "Iris - Pétalo", xlab = "Largo", ylab = "Ancho")
legend(x = "topleft", legend = c("Setosa", "Versicolor", "Virginica"),
fill = c("black", "red", "green"), title = "Especie")
#plot(x = banco$education, y = banco$age)
plot(x = banco$education, y = banco$age, main = "Edad por nivel educativo",
xlab = "Nivel educativo", ylab = "Edad",
col = c("orange3", "yellow3", "green3", "grey"))
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
#plot(x = banco$age, y = banco$balance, col= banco$loan)
#legend(x = "topleft", legend = c("No", "Yes"), fill = c("Black", "Red"), title = "Loan")
plot(x = iris$Petal.Length, y = iris$Petal.Width, col = iris$Species,
main = "Iris - Pétalo", xlab = "Largo", ylab = "Ancho")
legend(x = "topleft", legend = c("Setosa", "Versicolor", "Virginica"),
fill = c("black", "red", "green"), title = "Especie")
#plot(x = banco$education, y = banco$age)
#plot(x = banco$education, y = banco$age, main = "Edad por nivel educativo",
#     xlab = "Nivel educativo", ylab = "Edad",
#    col = c("orange3", "yellow3", "green3", "grey"))
boxplot(x = banco$age)
boxplot(formula = age ~ education, data =  banco)
plot(x = banco$marital, y = banco$education)
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
#plot(x = banco$age, y = banco$balance, col= banco$loan)
#legend(x = "topleft", legend = c("No", "Yes"), fill = c("Black", "Red"), title = "Loan")
plot(x = iris$Petal.Length, y = iris$Petal.Width, col = iris$Species,
main = "Iris - Pétalo", xlab = "Largo", ylab = "Ancho")
legend(x = "topleft", legend = c("Setosa", "Versicolor", "Virginica"),
fill = c("black", "red", "green"), title = "Especie")
#plot(x = banco$education, y = banco$age)
#plot(x = banco$education, y = banco$age, main = "Edad por nivel educativo",
#     xlab = "Nivel educativo", ylab = "Edad",
#    col = c("orange3", "yellow3", "green3", "grey"))
boxplot(x = banco$age)
boxplot(formula = age ~ education, data =  banco)
#plot(x = banco$marital, y = banco$education)
plot(x = banco$marital, y = banco$education,
col = c("#99cc99", "#cc9999", "#9999cc", "#9c9c9c"))
readLines("datos/bank.csv", n = 4)
banco <- read.csv(file = "datos/bank.csv", sep = ";")
# Primeros datos
head(banco)
# Dimensiones
dim(banco)
lapply(banco, class)
summary(banco)
hist(x = banco$age)
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia")
hist(x = banco$age, main = "Histograma de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "purple")
hist(x = banco$duration, main = "Histograma de Duration",
xlab = "Duration", ylab = "Frecuencia",
col = "ivory")
#plot(x = banco$education)
#plot(x = banco$education, main = "Gráfica de Educacíón",
#     xlab = "Nivel educativo", ylab = "Frecuencia",
#     col = c("royalblue", "seagreen", "purple", "grey"))
table(banco$education)
tab_banco <- table(banco$loan, banco$education)
# Resultado
tab_banco
barplot(tab_banco)
# Proporción por renglón
prop.table(tab_banco, margin = 1)
# Porporción por columna
prop.table(tab_banco, margin = 2)
# Porporción por tabla
prop.table(tab_banco)
ptab_banco <- prop.table(tab_banco, margin = 2)
barplot(ptab_banco)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
unique(banco$loan)
barplot(ptab_banco,  main = "Préstamos por nivel educativo",
xlab = "Nivel educativo", ylab = "Proporción",
col = c("royalblue", "grey"))
legend(x = "topright", legend = c("No", "Yes"), fill = c("royalblue", "grey"),
title = "Loan")
plot(x = banco$age, y = banco$balance)
banco$balance <- ifelse(banco$balance > 15000, 15000, banco$balance)
plot(x = banco$age, y = banco$balance)
# plot(x = banco$age, y = banco$balance, col= banco$loan)
#plot(x = banco$age, y = banco$balance, col= banco$loan)
#legend(x = "topleft", legend = c("No", "Yes"), fill = c("Black", "Red"), title = "Loan")
plot(x = iris$Petal.Length, y = iris$Petal.Width, col = iris$Species,
main = "Iris - Pétalo", xlab = "Largo", ylab = "Ancho")
legend(x = "topleft", legend = c("Setosa", "Versicolor", "Virginica"),
fill = c("black", "red", "green"), title = "Especie")
#plot(x = banco$education, y = banco$age)
#plot(x = banco$education, y = banco$age, main = "Edad por nivel educativo",
#     xlab = "Nivel educativo", ylab = "Edad",
#    col = c("orange3", "yellow3", "green3", "grey"))
boxplot(x = banco$age)
boxplot(formula = age ~ education, data =  banco)
#plot(x = banco$marital, y = banco$education)
#plot(x = banco$marital, y = banco$education,
#    col = c("#99cc99", "#cc9999", "#9999cc", "#9c9c9c"))
png(filename = "loan_age.png", width = 800, height = 600)
plot(x = banco$age, y = banco$duration, col = banco$loan,
main = "Edad y Duración", xlab = "Edad", ylab = "Duración")
